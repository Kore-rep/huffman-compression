/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package huffman.compression;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

import java.io.IOException;
import java.util.HashMap;

class CompressorTest {

    @Test
    void compressorGeneratesCharacterFrequencies() {
        try {
            HashMap<Character, Integer> map = Compressor.generateFrequencies("./src/test/resources/135-0.txt");
            assertEquals(333, map.get('X'));
            assertEquals(223000, map.get('t'));
        } catch (IOException e) {
            assert (false);
        }
    }

    @Test
    void compressorGeneratesCharacterFrequencies2() {
        try {
            HashMap<Character, Integer> map = Compressor
                    .generateFrequencies("./src/test/resources/fixed-frequencies.txt");

            assertEquals(10, map.get('a'));
            assertEquals(4, map.get('b'));
            assertEquals(11, map.get('c'));
            assertEquals(9, map.get('p'));
            assertEquals(1, map.get('l'));
            assertEquals(false, map.containsKey('d'));
        } catch (IOException e) {
            assert (false);
        }
    }

    @Test
    void compressorErrorsOnMissingTextFile() {
        try {
            Compressor.generateFrequencies("./src/test/resources/nothere");
        } catch (IOException e) {
            assert (true);
        }
    }
}
